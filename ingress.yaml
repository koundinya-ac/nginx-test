apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/(.*)/$ /$1 break;
      proxy_set_header X-Original-Host "my-domain.com";
      proxy_set_header Endpoint-Type public;
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/proxy-body-size: 200k
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-ssl-name: $service_name
    nginx.ingress.kubernetes.io/proxy-ssl-protocols: TLSv1.2
    nginx.ingress.kubernetes.io/proxy-ssl-secret: ingress-proxy-tls
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
  labels:
  name: my-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: my-domain.com
    http:
      paths:
      - backend:
          service:
            name: service-1
            port:
              number: 443
        path: /v1/test
        pathType: ImplementationSpecific
      - backend:
          service:
            name: service-2
            port:
              number: 443
        path: /v1/test2
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - my-domain.com
    secretName: ingress-default-tls
status:
  loadBalancer:
    ingress:
    - ip: 169.61.187.51
