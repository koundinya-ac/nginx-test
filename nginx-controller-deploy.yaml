apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "9"
  labels:
    app: nginx-ingress-controller
  name: nginx-ingress-controller
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: nginx-ingress-controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        app: nginx-ingress-controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dedicated
                operator: In
                values:
                - edge
      containers:
      - args:
        - /nginx-ingress-controller
        - --enable-ssl-passthrough
        - --configmap=ingress-controller-configmap
        - --default-ssl-certificate=ingress-default-tls
        - --publish-service=nginx-ingress-controller
        - --controller-class=k8s.io/nginx
        - --election-id=ingress-controller-leader-nginx-public
       image: wcp-genctl-docker-local.artifactory.swg-devops.com/rias/nginx-ingress-controller:1.34.0-dev.1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - sleep 30
        name: nginx-ingress-controller
        ports:
        - containerPort: 443
          protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ingress
      serviceAccountName: ingress
      terminationGracePeriodSeconds: 30
